// admin.js - LUCKY Delivery Admin Panel
// 1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏£‡∏≤‡∏Ñ‡∏≤ (‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô localStorage)
// 2. ‡∏î‡∏π/‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ (localStorage)

const defaultProducts = [
  { id: 'ice_small', name: '‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡πÄ‡∏•‡πá‡∏Å', price: 40, icon: 'üßä', desc: '‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡∏Å‡πâ‡∏≠‡∏ô‡πÄ‡∏•‡πá‡∏Å ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°' },
  { id: 'ice_crushed', name: '‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡∏ö‡∏î', price: 40, icon: 'üßä', desc: '‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡∏ö‡∏î‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏õ‡∏±‡πà‡∏ô' },
  { id: 'ice_large', name: '‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡πÉ‡∏´‡∏ç‡πà', price: 40, icon: 'üßä', desc: '‡∏ô‡πâ‡∏≥‡πÅ‡∏Ç‡πá‡∏á‡∏Å‡πâ‡∏≠‡∏ô‡πÉ‡∏´‡∏ç‡πà ‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏≤‡∏ô' },
  { id: 'gas_7kg', name: '‡πÅ‡∏Å‡πä‡∏™ 7 ‡∏Å‡∏Å.', price: 285, icon: 'üõ¢Ô∏è', desc: '‡∏ñ‡∏±‡∏á‡πÅ‡∏Å‡πä‡∏™‡∏Ç‡∏ô‡∏≤‡∏î 7 ‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°' },
  { id: 'gas_15kg', name: '‡πÅ‡∏Å‡πä‡∏™ 15 ‡∏Å‡∏Å.', price: 490, icon: 'üõ¢Ô∏è', desc: '‡∏ñ‡∏±‡∏á‡πÅ‡∏Å‡πä‡∏™‡∏Ç‡∏ô‡∏≤‡∏î 15 ‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°' },
  { id: 'gas_48kg', name: '‡πÅ‡∏Å‡πä‡∏™ 48 ‡∏Å‡∏Å.', price: 1490, icon: 'üõ¢Ô∏è', desc: '‡∏ñ‡∏±‡∏á‡πÅ‡∏Å‡πä‡∏™‡∏Ç‡∏ô‡∏≤‡∏î 48 ‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°' },
  { id: 'bottle_350', name: '‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏Ç‡∏ß‡∏î 350ml', price: 35, icon: 'üß¥', desc: '‡πÅ‡∏û‡πá‡∏Ñ 12 ‡∏Ç‡∏ß‡∏î', min: 10 },
  { id: 'bottle_600', name: '‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏Ç‡∏ß‡∏î 600ml', price: 42, icon: 'üß¥', desc: '‡πÅ‡∏û‡πá‡∏Ñ 12 ‡∏Ç‡∏ß‡∏î', min: 10 },
  { id: 'bottle_820', name: '‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏Ç‡∏ß‡∏î 820ml', price: 36, icon: 'üß¥', desc: '‡πÅ‡∏û‡πá‡∏Ñ 6 ‡∏Ç‡∏ß‡∏î', min: 10 }
];

function getProducts() {
  return JSON.parse(localStorage.getItem('adminProducts') || 'null') || defaultProducts;
}
function saveProducts(products) {
  localStorage.setItem('adminProducts', JSON.stringify(products));
}

function renderProductAdmin() {
  const products = getProducts();
  const div = document.getElementById('productAdmin');
  div.innerHTML = `<table style="width:100%;max-width:700px;margin:auto;border-collapse:collapse;">
    <tr style="background:#fffbe7;font-weight:700;color:#BFA600;"><th>‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô</th><th>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th><th>‡∏£‡∏≤‡∏Ñ‡∏≤</th><th>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥</th><th>‡∏•‡∏ö</th></tr>
    ${products.map((p,i)=>`
      <tr>
        <td style="font-size:1.7em;text-align:center;">${p.icon}</td>
        <td><input type="text" value="${p.name}" data-idx="${i}" data-field="name" style="width:120px;"></td>
        <td><input type="number" value="${p.price}" min="0" data-idx="${i}" data-field="price" style="width:70px;"></td>
        <td><input type="number" value="${p.min||0}" min="0" data-idx="${i}" data-field="min" style="width:60px;"></td>
        <td><button class="del-prod-btn" data-idx="${i}" style="color:#d32f2f;font-weight:700;">‡∏•‡∏ö</button></td>
      </tr>
    `).join('')}
    <tr><td colspan="5" style="text-align:center;padding:1em 0;">
      <button id="addProductBtn" class="btn-main" style="background:#ffe082;color:#BFA600;">+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà</button>
    </td></tr>
  </table>`;
}

document.getElementById('productAdmin').onclick = function(e) {
  if (e.target.classList.contains('del-prod-btn')) {
    const idx = +e.target.dataset.idx;
    if (confirm('‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ?')) {
      const products = getProducts();
      products.splice(idx,1);
      saveProducts(products);
      renderProductAdmin();
    }
  }
  if (e.target.id === 'addProductBtn') {
    const products = getProducts();
    products.push({ id: 'new_'+Date.now(), name: '', price: 0, icon: '', desc: '', min: 0 });
    saveProducts(products);
    renderProductAdmin();
  }
};

document.getElementById('saveProductsBtn').onclick = function() {
  const products = getProducts();
  document.querySelectorAll('#productAdmin input').forEach(input => {
    const idx = +input.dataset.idx;
    const field = input.dataset.field;
    if (field === 'price' || field === 'min') products[idx][field] = +input.value;
    else products[idx][field] = input.value;
  });
  saveProducts(products);
  alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
};

renderProductAdmin();

// --- Order log (mock: localStorage) ---
function getOrders() {
  return JSON.parse(localStorage.getItem('adminOrders') || '[]');
}
function saveOrders(orders) {
  localStorage.setItem('adminOrders', JSON.stringify(orders));
}
function renderOrders() {
  const orders = getOrders();
  const div = document.getElementById('ordersAdmin');
  if (!orders.length) {
    div.innerHTML = '<div style="color:#d32f2f;text-align:center;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠</div>';
    return;
  }
  div.innerHTML = `<table style="width:100%;max-width:900px;margin:auto;border-collapse:collapse;">
    <tr style="background:#fffbe7;font-weight:700;color:#BFA600;"><th>‡∏ß‡∏±‡∏ô-‡πÄ‡∏ß‡∏•‡∏≤</th><th>‡∏ä‡∏∑‡πà‡∏≠</th><th>‡πÇ‡∏ó‡∏£</th><th>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</th><th>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th><th>slip</th><th>‡∏•‡∏ö</th></tr>
    ${orders.map((o,i)=>`
      <tr>
        <td style="font-size:0.98em;">${o.datetime||'-'}</td>
        <td><input type="text" value="${o.name||''}" data-idx="${i}" data-field="name" style="width:90px;"></td>
        <td><input type="text" value="${o.phone||''}" data-idx="${i}" data-field="phone" style="width:90px;"></td>
        <td><textarea data-idx="${i}" data-field="address" style="width:120px;">${o.address||''}</textarea></td>
        <td style="font-size:0.98em;">${Object.values(o.products||{}).filter(p=>p.qty>0).map(p=>`${p.name} x${p.qty}`).join('<br>')}</td>
        <td>${o.slip?`<a href="${o.slip}" target="_blank">‡∏î‡∏π</a>`:'-'}</td>
        <td><button class="del-order-btn" data-idx="${i}" style="color:#d32f2f;font-weight:700;">‡∏•‡∏ö</button></td>
      </tr>
    `).join('')}
  </table>
  <div style="text-align:right;margin:1em 0;">
    <button id="exportOrdersBtn" class="btn-main" style="background:#ffe082;color:#BFA600;">Export ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ (CSV)</button>
    <button id="saveOrdersBtn" class="btn-main" style="background:#ffe082;color:#BFA600;">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
  </div>`;
}

document.getElementById('ordersAdmin').onclick = function(e) {
  if (e.target.classList.contains('del-order-btn')) {
    const idx = +e.target.dataset.idx;
    if (confirm('‡∏•‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ?')) {
      const orders = getOrders();
      orders.splice(idx,1);
      saveOrders(orders);
      renderOrders();
    }
  }
  if (e.target.id === 'exportOrdersBtn') {
    const orders = getOrders();
    let csv = '‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤,‡∏ä‡∏∑‡πà‡∏≠,‡πÇ‡∏ó‡∏£,‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà,‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤\n';
    orders.forEach(o => {
      const prod = Object.values(o.products||{}).filter(p=>p.qty>0).map(p=>`${p.name} x${p.qty}`).join('; ');
      csv += `"${o.datetime||''}","${o.name||''}","${o.phone||''}","${o.address||''}","${prod}"
`;
    });
    const blob = new Blob([csv], {type:'text/csv'});
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'orders.csv';
    a.click();
    setTimeout(()=>URL.revokeObjectURL(url), 1000);
  }
  if (e.target.id === 'saveOrdersBtn') {
    const orders = getOrders();
    document.querySelectorAll('#ordersAdmin input, #ordersAdmin textarea').forEach(input => {
      const idx = +input.dataset.idx;
      const field = input.dataset.field;
      orders[idx][field] = input.value;
    });
    saveOrders(orders);
    alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
  }
};
renderOrders();
